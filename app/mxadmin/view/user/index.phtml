{extend name="base" /}

{block name="title"}用户管理{/block}

{block name="body"}
<div class="layui-fluid">
    <div class="layui-card">
        <div class="layui-card-body">
            <!-- 表格工具栏 -->
            <form class="layui-form toolbar">
                <div class="layui-form-item">
                    <div class="layui-inline">
                        <label class="layui-form-label">医院名称</label>
                        <div class="layui-input-inline">
                            <div id="classifyParentSels" class="mx-xmselect-tree"></div>
                        </div>
                    </div>
                    <div class="layui-inline">
                        <label class="layui-form-label">性别</label>
                        <div class="layui-input-inline">
                            <select name="sex">
                                <option value="">--- 全部 ---</option>
                                <option value="1">男</option>
                                <option value="0">女</option>
                            </select>
                        </div>
                    </div>
                    <div class="layui-inline">
                        <label class="layui-form-label">职称</label>
                        <div class="layui-input-inline">
                            <div id="professionalParentSel" class="mx-xmselect-tree"></div>
                        </div>
                        <!--<div class="layui-input-inline">
                            <select name="professional_id">
                                <option value="">--- 全部 ---</option>
                                {volist name="professional_type" id="vo"}
                                <option value="{$vo.id}">{$vo.name}</option>
                                {/volist}
                            </select>
                        </div>-->
                    </div>
                    <div class="layui-inline">
                        <label class="layui-form-label">学历</label>
                        <div class="layui-input-inline">
                            <div id="educationalParentSels" class="mx-xmselect-tree"></div>
                        </div>
                        <!--<div class="layui-input-inline">
                            <select name="educational_id">
                                <option value="">--- 全部 ---</option>
                                {volist name="educational_type" id="vo"}
                                <option value="{$vo.id}">{$vo.name}</option>
                                {/volist}
                            </select>
                        </div>-->
                    </div>
                    <div class="layui-inline">
                        <label class="layui-form-label">手机号</label>
                        <div class="layui-input-inline">
                            <input name="phone" class="layui-input" autocomplete="off" placeholder="输入手机号"/>
                        </div>
                    </div>
                    <div class="layui-inline">
                        <label class="layui-form-label">姓&emsp;名</label>
                        <div class="layui-input-inline">
                            <input name="nickname" class="layui-input" autocomplete="off" placeholder="输入姓名"/>
                        </div>
                    </div>
                    <!--<div class="layui-inline">
                        <label class="layui-form-label">创建时间</label>
                        <div class="layui-input-inline">
                            <input name="createDateSel" class="layui-input icon-date" placeholder="选择日期范围" autocomplete="off"/>
                        </div>
                    </div>-->
                    <div class="layui-inline">
                        <label class="layui-form-label">状&emsp;态</label>
                        <div class="layui-input-inline">
                            <select name="status">
                                <option value="">--- 全部 ---</option>
                                <option value="1">已审核</option>
                                <option value="2">驳回</option>
                                <option value="null">未审核</option>
                                <option value="0">禁用</option>
                            </select>
                        </div>
                    </div>
                    <div class="layui-inline">&emsp;
                        <button class="layui-btn icon-btn" lay-filter="userTbSearch" lay-submit>
                            <i class="layui-icon">&#xe615;</i>搜索
                        </button>
                    </div>
                </div>
            </form>
            <!-- 数据表格 -->
            <table id="userTable" lay-filter="userTable"></table>
        </div>
    </div>
</div>

<!-- 表格操作列 -->
<script type="text/html" id="userTbBar">
    <!--<a class="layui-btn layui-btn-xs" lay-event="edit">查看</a>-->
    <a class="layui-btn layui-btn-xs" lay-event="find">查看</a>
    <a  class="layui-btn layui-btn-xs {{(d.status == 1)?'layui-btn-disabled':''}}" {{(d.status == 1)?'':'lay-event="shenhe"'}}>
    {{(d.status == 1)?'审核
    </span>':'审核
    '}}
    </a>
<!--    <a class="layui-btn layui-btn-xs " lay-event="shenhe">审核</a>-->
<!--    <a class="layui-btn layui-btn-xs " lay-event="edits">编辑</a>-->
    {{# if (d.status == 1) { }}
    <a class="layui-btn layui-btn-xs layui-btn-danger" lay-event="editStatus">禁用</a>
    {{# } else if (d.status == 0) { }}
    <a class="layui-btn layui-btn-xs" lay-event="editStatus">取消禁用</a>
    {{# } }}


</script>
<button style="display: none;" type="button" id="daoru"></button>
<!-- 表格状态列 -->
<script type="text/html" id="userTbState">
    {{#  if(d.status == null){ }}
    <span class="text-danger">未审核</span>
    {{#  } else if(d.status == 1) { }}
    <span class="text-success">已审核</span>
    {{#  } else if(d.status == 0) { }}
    <span class="text-gray">禁用</span>
    {{#  } else{ }}
    <span class="text-black">驳回</span>
    {{#  } }}
</script>


<script type="text/html" id="userTbPermissions">
    <input type="checkbox" lay-filter="userTbPermissionsCk" value="{{d.id}}" lay-skin="switch" lay-text="已开启|未开启" {{d.permissions==1?'checked':''}} style="display: none;" />
    <p style="display: none;">{{d.permissions==1?'已开启':'未开启'}}</p>
</script>
<script type="text/html" id="userWhite">
    <input type="checkbox" lay-filter="userWhiteCk" value="{{d.id}}" lay-skin="switch" lay-text="已授权|未授权" {{d.is_white==1?'checked':''}} style="display: none;" />
    <p style="display: none;">{{d.is_white==1?'已授权':'未授权'}}</p>
</script>

<!-- 编辑表单弹窗 -->
<script type="text/html" id="userEditDialog">
    <form id="userEditForm" lay-filter="userEditForm" class="layui-form model-form">
        <input name="id" type="hidden"/>
        <div class="layui-form-item">
            <label class="layui-form-label layui-form-required">登录账号</label>
            <div class="layui-input-block">
                <input name="phone" class="layui-input" autocomplete="off" placeholder="请输入登录账号" minlength="2" maxlength="20" lay-verType="tips" lay-verify="required|h5" required/>
            </div>
        </div>
        <div class="layui-form-item">
            <label class="layui-form-label layui-form-required">姓名</label>
            <div class="layui-input-block">
                <input name="nickname" class="layui-input" autocomplete="off" placeholder="请输入姓名" minlength="2" maxlength="20" lay-verType="tips" lay-verify="required|h5" required/>
            </div>
        </div>
        <div class="layui-form-item">
            <label class="layui-form-label layui-form-required">新 密 码</label>
            <div class="layui-input-block">
                <input type="password" name="newpassword" placeholder="请输入新密码" class="layui-input"
                       autocomplete="off" lay-verType="tips" lay-verify="required" required/>
            </div>
        </div>
        <div class="layui-form-item">
            <label class="layui-form-label layui-form-required">确认密码</label>
            <div class="layui-input-block">
                <input type="password" name="repassword" placeholder="请再次输入新密码" class="layui-input"
                       autocomplete="off" lay-verType="tips" lay-verify="required|equalTo"
                       lay-equalTo="input[name=newpassword]" lay-equalToText="两次输入密码不一致" required/>
            </div>
        </div>
        <div class="layui-form-item">
            <label class="layui-form-label">党内职务</label>
            <div class="layui-input-block">
                <input name="workname" class="layui-input" autocomplete="off" placeholder="请输入党内职务" minlength="2"
                       maxlength="20"/>
            </div>
        </div>
        <div class="layui-form-item">
            <label class="layui-form-label layui-form-required">性别</label>
            <div class="layui-input-block">
                <input name="sex" type="radio" value="0" title="女" checked/>
                <input name="sex" type="radio" value="1" title="男"/>
                <input name="sex" type="radio" value="2" title="未知"/>
            </div>
        </div>
        <div class="layui-form-item">
            <label class="layui-form-label">头像</label>
            <div class="layui-input-block">
                <input name="headimg" class="layui-input" autocomplete="off" placeholder="请选择图片"/>
                <button type="button" class="layui-btn layui-btn-normal imageMore" id="imageMore"><i class="layui-icon">&#xe681;</i>上传图片</button>
                <span>(尺寸:375*500)</span>
            </div>
        </div>
        <div class="layui-form-item text-right">
            <button class="layui-btn" lay-filter="userEditSubmit" lay-submit>保存</button>
            <button class="layui-btn layui-btn-primary" type="button" mx-event="closeDialog">取消</button>
        </div>
    </form>
</script>
<!-- 表单弹窗 -->
<script type="text/html" id="userUpdateDialog">
    <form id="userUpdateForm" lay-filter="userUpdateForm" class="layui-form model-form">
        <input name="id" type="hidden"/>
        <div class="layui-form-item">
            <label class="layui-form-label layui-form-required">体验时间</label>
            <div class="layui-input-block">
                <input type="text" name="vip_time" class="layui-input" id="test1" placeholder="yyyy-MM-dd">
            </div>
        </div>           
        <div class="layui-form-item text-right">
            <button class="layui-btn" lay-filter="userUpdateSubmit" lay-submit>保存</button>
            <button class="layui-btn layui-btn-primary" type="button" mx-event="closeDialog">取消</button>
        </div>
    </form>
</script>

<!-- 审核表单弹窗 -->
<script type="text/html" id="userShenheDialog">
    <form id="userShenheForm" lay-filter="userShenheForm" class="layui-form model-form">
        <input name="id" type="hidden"/>
        <!--<div class="layui-form-item">
            <label class="layui-form-label layui-form-required">手机号码</label>
            <div class="layui-input-block">
                <input name="phone" class="layui-input" autocomplete="off" placeholder="手机号码" minlength="2" maxlength="20" lay-verType="tips" lay-verify="required|h5" required/>
            </div>
        </div>
        <div class="layui-form-item">
            <label class="layui-form-label layui-form-required">姓名</label>
            <div class="layui-input-block">
                <input name="nickname" class="layui-input" autocomplete="off" placeholder="请输入姓名" minlength="2" maxlength="20" lay-verType="tips" lay-verify="required|h5" required/>
            </div>
        </div>-->
        <div class="layui-form-item">
            <label class="layui-form-label layui-form-required">审核结果</label>
            <div class="layui-input-block">
                <input name="status" type="radio" value="1" title="通过" checked/>
                <input name="status" type="radio" value="2" title="驳回"/>
            </div>
        </div>
        <div class="layui-form-item layui-form-text">
            <label class="layui-form-label">备注</label>
            <div class="layui-input-block">
                <textarea name="remark" class="layui-textarea"></textarea>
            </div>
        </div>
        <div class="layui-form-item text-right">
            <button class="layui-btn" lay-filter="userShenheSubmit" lay-submit>保存</button>
            <button class="layui-btn layui-btn-primary" type="button" mx-event="closeDialog">取消</button>
        </div>
    </form>
</script>
{/block}
{block name="script"}
<script>
    layui.use(['layer', 'form', 'formX', 'table', 'admin', 'xmSelect', 'laydate','upload'], function () {
        var $ = layui.jquery;
        var layer = layui.layer;
        var form = layui.form;
        var table = layui.table;
        var admin = layui.admin;
        var xmSelect = layui.xmSelect;
        var laydate = layui.laydate;
        var layer_tips = 0;
        var upload = layui.upload;
        $(document).on('mouseenter', '#layui-layer-tips', function () {
            layer_tips = layer.tips('点击审核', '#layui-layer-tips', {
                time: 0,
                tips: 3
            });
        }).on('mouseleave', '#layui-layer-tips', function () {
            layer.close(layer_tips);
        });

        /* 渲染表格 */
        var insTb = table.render({
            elem: '#userTable',
            url: "{:url('mxadmin/user/datalist')}",
            page: {limit: 15},
            limits: [15, 30, 45, 60, 75, 90, 100, 200, 500],
            toolbar: ['<p>',
                //'<button lay-event="del" class="layui-btn layui-btn-sm layui-btn-danger icon-btn"><i class="layui-icon">&#xe640;</i>批量删除</button>',
                //'<button lay-event="update_vip" class="layui-btn layui-btn-sm layui-btn-normal icon-btn"><i class="layui-icon">&#xe640;</i>批量编辑时间</button>',
                //'{if $is_admin == 1}<button lay-event="add" class="layui-btn layui-btn-sm icon-btn"><i class="layui-icon">&#xe654;</i>添加账号</button>&nbsp;{else/}<button lay-event="adds" class="layui-btn layui-btn-sm icon-btn"><i class="layui-icon">&#xe654;</i>添加账号</button>&nbsp;{/if}',
                //'<button lay-event="Padd" class="layui-btn layui-btn-sm icon-btn"><i class="layui-icon">&#xe654;</i>导入用户</button>&nbsp;',
                //'<a href="/storage/file/用户模板.xlsx" class="layui-btn layui-btn-sm layui-btn-radius layui-btn-primary"><i class="layui-icon">&#xe601;</i>用户模板</a>',
                //'<button lay-event="dydh" class="layui-btn layui-btn-sm">masterplate复制<i class="layui-icon layui-icon-down"></i></button>',
                '</p>'].join(''),
                //defaultToolbar: ['filter'],
            cellMinWidth: 100,
            cols: [[
                //{type: 'checkbox'},
                {field: 'id', title: '序号', align: 'center', sort: true, width: 90},
                {field: 'departmentname', title: '医院名称', align: 'center'},
                {field: 'nickname', title: '姓名', align: 'center'},
                {field: 'sex', title: '性别', align: 'center', templet: function(d){
                        return d.sex === 0 ? '女' : '男';}
                },
                {field: 'phone', title: '手机号码', align: 'center'},
                {field: 'idcard', title: '身份证号码', align: 'center'},
                {field: 'position_name', title: '职务', align: 'center'},
                {field: 'professional_name', title: '职称', align: 'center'},
                {field: 'educational_name', title: '学历', align: 'center'},
                //{field: 'login_time', title: '登录时间', align: 'center', sort: true},
                {field: 'create_time', title: '注册日期', align: 'center', sort: true},
                {field: 'status', title: '审核状态', templet: '#userTbState', align: 'center',width: 110},
                {title: '操作', toolbar: '#userTbBar', align: 'center', minWidth: 200}
            ]],
            parseData: function(res){ //res 即为原始返回的数据
                return {
                    "code": res.code, //解析接口状态
                    "msg": res.msg, //解析提示文本
                    "count": res.data.total, //解析数据长度
                    "data": res.data.data //解析数据列表
                };
            },
        });

        /* 渲染时间选择 */
        laydate.render({
            elem: 'input[name="createDateSel"]',
            type: 'date',
            range: true,
            trigger: 'click'
        });
        var is_admin="{$is_admin}";
        if (is_admin == 1) {
            // 渲染下拉树
            var insXmSels = xmSelect.render({
                el: '#classifyParentSels',
                layVerType: 'tips',
                height: '400px',
                name: 'd_id',
                model: { label: { type: 'text' } },
                prop: {
                    name: 'name',
                    value: 'id'
                },
                clickClose: false,
                filterable: true,
                filterMethod: function(val, item, index, prop) {
                    if (item.name.toLowerCase().indexOf(val.toLowerCase()) != -1) {
                        // 仅允许选择子集数据
                        if (item.parent_id) {
                            return true;
                        }
                    }
                    return false;
                },
                searchTips: '请输入关键词进行搜索',
                tree: {
                    show: true,
                    indent: 15,
                    strict: false,
                    expandedKeys: true
                },
                data: formatData({:json_encode($category)}),
            });

            // 渲染职称下拉树
            var professionalParentSel = xmSelect.render({
                el: '#professionalParentSel',
                layVerType: 'tips',
                height: '400px',
                name: 'professional_id',
                model: { label: { type: 'text' } },
                prop: {
                    name: 'name',
                    value: 'id'
                },
                clickClose: false,
                filterable: true,
                filterMethod: function(val, item, index, prop) {
                    if (item.name.toLowerCase().indexOf(val.toLowerCase()) != -1) {
                        // 仅允许选择子集数据
                        if (item.parent_id) {
                            return true;
                        }
                    }
                    return false;
                },
                searchTips: '请输入关键词进行搜索',
                tree: {
                    show: true,
                    indent: 15,
                    strict: false,
                    expandedKeys: true
                },
                data: {:json_encode($professional_type)},
            });

            // 渲染学历下拉树
            var educationalParentSel = xmSelect.render({
                el: '#educationalParentSels',
                layVerType: 'tips',
                height: '400px',
                name: 'educational_id',
                model: { label: { type: 'text' } },
                prop: {
                    name: 'name',
                    value: 'id'
                },
                clickClose: false,
                filterable: true,
                filterMethod: function(val, item, index, prop) {
                    if (item.name.toLowerCase().indexOf(val.toLowerCase()) != -1) {
                        // 仅允许选择子集数据
                        if (item.parent_id) {
                            return true;
                        }
                    }
                    return false;
                },
                searchTips: '请输入关键词进行搜索',
                tree: {
                    show: true,
                    indent: 15,
                    strict: false,
                    expandedKeys: true
                },
                data: {:json_encode($educational_type)},
            });

            // 格式化数据函数
            function formatData(data) {
                return data.map(item => {
                    if (!item.pid) {
                        // 禁用一级数据
                        item.disabled = true;
                    }
                    if (item.children) {
                        item.children = formatData(item.children);
                    }
                    return item;
                });
            }

        }

        /* 表格搜索 */
        form.on('submit(userTbSearch)', function (data) {
            if (data.field.createDateSel) {
                var searchDate = data.field.createDateSel.split(' - ');
                data.field.startDate = searchDate[0];
                data.field.endDate = searchDate[1];
            } else {
                data.field.startDate = null;
                data.field.endDate = null;
            }
            data.field.createDateSel = undefined;
            insTb.reload({where: data.field, page: {curr: 1}, url:"{:url('mxadmin/user/serach')}"});
            return false;
        });

        /* 表格操作列点击事件 */
        table.on('tool(userTable)', function (obj) {
            if (obj.event === 'edit') { // 编辑
                showEditModel(obj.data);
            }else if (obj.event === 'shenhe') { // 审核
                showShenheModel(obj.data);
            }else if (obj.event === 'find') { // 查看
                showModel(obj.data);
            }else if (obj.event === 'editStatus') { // 编辑
                doEditStatus(obj,'您确定要编辑“' + obj.data.phone + '”的状态吗？');
            } else if (obj.event === 'del') { // 删除
                doDel(obj,'您确定要删除“' + obj.data.phone + '”的账号吗？');
            }else{
                var field = $(this).data('field');
                //var fields = obj.data;
                //console.log(field);
                laydate.render({
                    elem: this.firstChild
                    , show: true //直接显示
                    ,type: 'datetime'
                    , closeStop: this
                    ,done: function(value, date, endDate){
                        console.log(value); //得到日期生成的值，如：2017-08-18
                        //console.log(date); //得到日期时间对象：{year: 2017, month: 8, date: 18, hours: 0, minutes: 0, seconds: 0}
                        //console.log(endDate); //得结束的日期时间对象，开启范围选择（range: true）才会返回。对象成员同上。
                        var loadIndex = layer.load(2);
                        $.post("{:url('mxadmin/user/edit_update_time')}", {
                            id: obj.data.id,
                            field: value
                        }, function (res) {
                            layer.close(loadIndex);
                            if (res.code === 1) {
                                layer.msg(res.msg);
                                insTb.reload();
                            } else {
                                layer.msg(res.msg, {icon: 5, anim: 6});
                            }
                        }, 'json');
                      }
                });
            }
        });

        /* 显示表单弹窗 */
        function showModel(mData) {
            var layIndex = admin.open({
                title: (mData ? '查看' : '添加') + '会员',
                shade: 0.5,
                type: 2,
                //shadeClose: true,
                //url: "{:url('mxadmin/user/find')}?id=" + mData.id,
                content: 'find?id=' + mData.id,
                data: {formdata: mData},     // 传递数据到表单页面
                end: function () {
                    if (admin.getLayerData(layIndex, 'formOk')) {  // 判断表单操作成功标识
                        insTb.reload();  // 成功刷新表格
                    }
                },
                success: function (layero, dIndex) {
                    // 弹窗超出范围不出现滚动条
                    //$(layero).children('.layui-layer-content').css('overflow', 'visible');
                }
            });
            // 窗口打开即全屏
            layer.full(layIndex);
        }


        /* 表格头工具栏点击事件 */
        table.on('toolbar(userTable)', function (obj) {
            if (obj.event === 'add') { // 添加
                showEditModel();
            } else if (obj.event === 'del') { // 删除
                var checkRows = table.checkStatus('userTable');
                if (checkRows.data.length === 0) {
                    layer.msg('请选择要删除的账号', {icon: 5, anim: 6});
                    return;
                }
                var ids = checkRows.data.map(function (d) {
                    return d.id;
                });
                doDel({ids: ids},'您确定要删除选中的这些账号吗？');
            }else if (obj.event === 'update_vip') { // 删除
                var checkRows = table.checkStatus('userTable');
                if (checkRows.data.length === 0) {
                    layer.msg('请选择要更新的账号', {icon: 5, anim: 6});
                    return;
                }
                var ids = checkRows.data.map(function (d) {
                    return d.id;
                });
                showUpdateModel({ids: ids});
                //doDel({ids: ids},'您确定要删除选中的这些账号吗？');
            }else if(obj.event === 'dydh'){
                dydh();
            }else if (obj.event === 'Padd'){
                $("#daoru").click();
            }else if (obj.event === 'adds'){
                //普通管理员增加用户
                showEditModels();
            }
        });
        //用户导入
        upload.render({
            elem: '#daoru',
            url: "{:url('mxadmin/user/daoru')}", //改成您自己的上传接口
            accept: 'file', //文件
            acceptMime: 'application/vnd.ms-excel, application/vnd.openxmlformats-officedocument.spreadsheetml.sheet',
            exts: 'xlsx|xls', //只允许上传excel文件
            size: 8048, //限制文件大小，单位 KB
            done: function(res){
                if (res.code === 1) {
                    layer.msg(res.msg, {icon: 1});
                    insTb.reload();  // 成功刷新表格
                } else {
                    layer.msg(res.msg, {icon: 5, anim: 10});
                }
            }
        });
        /* 复制用户 */
        function dydh() {
            console.log(); 
            layer.confirm('确定要复制用户吗？', {
                title: '复制用户',
                skin: 'layui-layer-admin',
                shade: 0.5,
                shadeClose: true,
            }, function (i) {
                layer.close(i);
                var loadIndex = layer.load(2);
                $.post("{:url('mxadmin/user/copyuser')}", {
                    //m_id: obj ? obj : '',
                }, function (res) {
                    layer.close(loadIndex);
                    if (res.code === 1) {
                        layer.msg(res.msg, {icon: 1});
                        table.reload('userTable') //tableId要和table.render渲染时的id一致
                    } else {
                        layer.msg(res.msg, {icon: 5, anim: 6});
                    }
                }, 'json');
            });
        }
        /* 显示表单弹窗 */
        function showEditModel(mData) {
            admin.open({
                type: 1,
                title: (mData ? '编辑' : '添加') + '账号',
                shade: 0.5,
                area: ['600px', '620px'],
                //shadeClose: true,
                content: $('#userEditDialog').html(),
                success: function (layero, dIndex) {
                    //图片上传
                    upload.render({
                        elem: '.imageMore',
                        url: "{:url('mxadmin/upload/upload')}", //改成您自己的上传接口
                        acceptMime: 'image/*',
                        size: 2048, //限制文件大小，单位 KB
                        done: function(res){
                            if (res.code === 1) {
                                layer.msg(res.msg, {icon: 1});
                                this.item.prev('input').val(res.data.filePath);
                                this.item.after(' <a href="'+res.data.filePath+'" target="_blank"><img src="'+res.data.filePath+'" height="38"></a>');
                            } else {
                                layer.msg(res.msg, {icon: 5, anim: 6});
                            }
                        }
                    });
                    // 回显表单数据
                    form.val('userEditForm', mData);
                    // 表单提交事件
                    form.on('submit(userEditSubmit)', function (data) {
                        //data.field.d_id = insXmSel.getValue('valueStr');
                        var loadIndex = layer.load(2);
                        $.post(mData ? "{:url('mxadmin/user/edit')}" : "{:url('mxadmin/user/add')}", data.field, function (res) {
                            layer.close(loadIndex);
                            if (res.code === 1) {
                                layer.close(dIndex);
                                layer.msg(res.msg, {icon: 1});
                                insTb.reload();  // 保存成功刷新表格
                            } else {
                                layer.msg(res.msg, {icon: 5, anim: 6});
                            }
                        }, 'json');
                        return false;
                    });
                    if (mData) {
                        // 上传图片小图显示
                        var imageValue = $('#imageMore').prev('input').val();
                        if (imageValue) {
                            $('#imageMore').after(' <a href="'+imageValue+'" target="_blank"><img src="'+imageValue+'" height="38"></a>');
                        }
                        var imageValues = $('#imageMores').prev('input').val();
                        if (imageValues) {
                            $('#imageMores').after(' <a href="'+imageValues+'" target="_blank"><img src="'+imageValues+'" height="38"></a>');
                        }
                    }
                    // 渲染下拉树
                    /*var insXmSel = xmSelect.render({
                        el: '#classifyParentSel',
                        layVerify: 'required',
                        layVerType: 'tips',
                        height: '400px',
                        initValue: mData ? [mData.d_id] : [],
                        model: {label: {type: 'text'}},
                        prop: {
                            name: 'name',
                            value: 'id'
                        },
                        radio: true,
                        clickClose: true,
                        filterable: true,
                        filterMethod: function(val, item, index, prop){
                            if(item.name.toLowerCase().indexOf(val.toLowerCase()) != -1){ //名称中包含的大小写都搜索出来
                                return true;
                            }
                            return false; //其他的就不要了
                        },
                        searchTips: '请输入关键词进行搜索',
                        tree: {
                            show: true,
                            indent: 15,
                            strict: false,
                            expandedKeys: true
                        },
                        data: {:json_encode($category)},
                    });*/
                    // 编辑文本框状态
                    if (mData) {
                        //$(layero).find('[name="phone"]').attr('disabled','disabled').addClass("layui-bg-gray");
                        $(layero).find('[name="newpassword"]').removeAttr('lay-verType lay-verify required');
                        $(layero).find('[name="newpassword"]').attr('placeholder','若不编辑密码，请留空');
                        $(layero).find('[name="repassword"]').attr('lay-verify','equalTo');
                        $(layero).find('[name="repassword"]').removeAttr('required');
                        if (mData.is_admin === 1) {$(layero).find('#roleName').remove();}
                    }
                    // 禁止弹窗出现滚动条
                    $(layero).children('.layui-layer-content').css('overflow', 'visible');
                }
            });
        }

        /* 显示表单弹窗 */
        function showUpdateModel(obj) {
            admin.open({
                type: 1,
                title: (obj ? '编辑' : '添加') + '时间',
                shade: 0.5,
                area : [ '600px', '520px' ],
                //shadeClose: true,
                content: $('#userUpdateDialog').html(),
                success: function (layero, dIndex) {
                    //常规用法
                    laydate.render({
                      elem: '#test1'
                    });
                    // 表单提交事件
                    form.on('submit(userUpdateSubmit)', function (data) {
                        var loadIndex = layer.load(2);
                        data.field.id= obj.data ? obj.data.id : '',
                        data.field.ids= obj.ids ? obj.ids.join(',') : ''
                        $.post(obj ? "{:url('mxadmin/user/Update')}" : "{:url('mxadmin/user/Update')}", data.field, function (res) {
                            layer.close(loadIndex);
                            if (res.code === 1) {
                                layer.close(dIndex);
                                layer.msg(res.msg, {icon: 1});
                                insTb.reload();  // 保存成功刷新表格
                            } else {
                                layer.msg(res.msg, {icon: 5, anim: 6});
                            }
                        }, 'json');
                        return false;
                    });
                    
                    // 禁止弹窗出现滚动条
                    $(layero).children('.layui-layer-content').css('overflow', 'visible');
                }
            });
        }


        /* 显示表单弹窗 */
        function showShenheModel(mData) {
            admin.open({
                type: 1,
                title: (mData ? '审核' : '添加') + '账号',
                shade: 0.5,
                area : [ '600px', '560px' ],
                //shadeClose: true,
                content: $('#userShenheDialog').html(),
                success: function (layero, dIndex) {
                    // 回显表单数据
                    form.val('userShenheForm', mData);
                    // 表单提交事件
                    form.on('submit(userShenheSubmit)', function (data) {
                        //data.field.d_id = insXmSel.getValue('valueStr');
                        var loadIndex = layer.load(2);
                        $.post(mData ? "{:url('mxadmin/user/shenhe')}" : "{:url('mxadmin/user/add')}", data.field, function (res) {
                            layer.close(loadIndex);
                            if (res.code === 1) {
                                layer.close(dIndex);
                                layer.msg(res.msg, {icon: 1});
                                insTb.reload();  // 保存成功刷新表格
                            } else {
                                layer.msg(res.msg, {icon: 5, anim: 6});
                            }
                        }, 'json');
                        return false;
                    });
                    // 渲染下拉树
                    /*var insXmSel = xmSelect.render({
                        el: '#classifyParentSel',
                        layVerify: 'required',
                        layVerType: 'tips',
                        height: '400px',
                        initValue: mData ? [mData.d_id] : [],
                        model: {label: {type: 'text'}},
                        prop: {
                            name: 'name',
                            value: 'id'
                        },
                        radio: true,
                        clickClose: true,
                        filterable: true,
                        filterMethod: function(val, item, index, prop){
                            if(item.name.toLowerCase().indexOf(val.toLowerCase()) != -1){ //名称中包含的大小写都搜索出来
                                return true;
                            }
                            return false; //其他的就不要了
                        },
                        searchTips: '请输入关键词进行搜索',
                        tree: {
                            show: true,
                            indent: 15,
                            strict: false,
                            expandedKeys: true
                        },
                        data: {:json_encode($category)},
                    });*/
                    if (mData) {
                        // 上传图片小图显示
                        var imageValue = $('#imageMore').prev('input').val();
                        if (imageValue) {
                            $('#imageMore').after(' <a href="'+imageValue+'" target="_blank"><img src="'+imageValue+'" height="38"></a>');
                        }
                        var imageValues = $('#imageMores').prev('input').val();
                        if (imageValues) {
                            $('#imageMores').after(' <a href="'+imageValues+'" target="_blank"><img src="'+imageValues+'" height="38"></a>');
                        }
                    }
                    // 编辑文本框状态
                    if (mData) {
                        $(layero).find('[name="phone"]').attr('disabled','disabled').addClass("layui-bg-gray");
                        $(layero).find('[name="new    "]').removeAttr('lay-verType lay-verify required');
                        $(layero).find('[name="newpassword"]').attr('placeholder','若不编辑密码，请留空');
                        $(layero).find('[name="repassword"]').attr('lay-verify','equalTo');
                        $(layero).find('[name="repassword"]').removeAttr('required');
                        if (mData.is_admin === 1) {$(layero).find('#roleName').remove();}
                    }
                    // 禁止弹窗出现滚动条
                    $(layero).children('.layui-layer-content').css('overflow', 'visible');
                }
            });
        }

        /* 删除 */
        function doDel(obj,txt) {
            layer.confirm(txt, {
                title: '删除账号',
                skin: 'layui-layer-admin',
                shade: 0.5,
                shadeClose: true,
            }, function (i) {
                layer.close(i);
                var loadIndex = layer.load(2);
                $.post("{:url('mxadmin/user/del')}", {
                    id: obj.data ? obj.data.id : '',
                    ids: obj.ids ? obj.ids.join(',') : ''
                }, function (res) {
                    layer.close(loadIndex);
                    if (res.code === 1) {
                        layer.msg(res.msg, {icon: 1});
                        insTb.reload();
                    } else {
                        layer.msg(res.msg, {icon: 5, anim: 6});
                    }
                }, 'json');
            });
        }

        /* 编辑状态 */
        function doEditStatus(obj,txt) {
            console.log(obj)
            layer.confirm(txt, {
                title: '编辑状态',
                skin: 'layui-layer-admin',
                shade: 0.5,
                shadeClose: true,
            }, function (i) {
                layer.close(i);
                var loadIndex = layer.load(2);
                $.post("{:url('mxadmin/user/edit_state_same')}", {
                    id: obj.data ? obj.data.id : '',
                    ids: obj.ids ? obj.ids.join(',') : '',
                    status: obj.data ? obj.data.status : 1,
                }, function (res) {
                    layer.close(loadIndex);
                    if (res.code === 1) {
                        layer.msg(res.msg, {icon: 1});
                        insTb.reload();
                    } else {
                        layer.msg(res.msg, {icon: 5, anim: 6});
                    }
                }, 'json');
            });
        }

        /* 编辑用户状态 */
        form.on('switch(userTbStateCk)', function (obj) {
            var loadIndex = layer.load(2);
            $.post("{:url('mxadmin/user/edit_state_same')}", {
                id: obj.elem.value,
                status: obj.elem.checked ? 1 : 0
            }, function (res) {
                layer.close(loadIndex);
                if (res.code === 1) {
                    layer.msg(res.msg);
                    insTb.reload();
                } else {
                    layer.msg(res.msg, {icon: 5, anim: 6});
                    $(obj.elem).prop('checked', !obj.elem.checked);
                    form.render('checkbox');
                }
            }, 'json');
        });
        /* 编辑用户权限 */
        form.on('switch(userTbPermissionsCk)', function (obj) {
            var loadIndex = layer.load(2);
            $.post("{:url('mxadmin/user/edit_permissions_same')}", {
                id: obj.elem.value,
                permissions: obj.elem.checked ? 1 : 0
            }, function (res) {
                layer.close(loadIndex);
                if (res.code === 1) {
                    layer.msg(res.msg);
                    insTb.reload();
                } else {
                    layer.msg(res.msg, {icon: 5, anim: 6});
                    $(obj.elem).prop('checked', !obj.elem.checked);
                    form.render('checkbox');
                }
            }, 'json');
        });
        /* 编辑跨部门权限 */
        form.on('switch(userWhiteCk)', function (obj) {
            var loadIndex = layer.load(2);
            $.post("{:url('mxadmin/user/edit_white_same')}", {
                id: obj.elem.value,
                is_white: obj.elem.checked ? 1 : 0
            }, function (res) {
                layer.close(loadIndex);
                if (res.code === 1) {
                    layer.msg(res.msg);
                    insTb.reload();
                } else {
                    layer.msg(res.msg, {icon: 5, anim: 6});
                    $(obj.elem).prop('checked', !obj.elem.checked);
                    form.render('checkbox');
                }
            }, 'json');
        });
    });
</script>
{/block}
