{extend name="../../mxadmin/view/base" /}

{block name="title"}报名列表{/block}

{block name="body"}
<div class="layui-fluid">
    <div class="layui-card">
        <div class="layui-card-body">
            <!-- 表格工具栏 -->
            <form class="layui-form toolbar">
                <div class="layui-form-item">
                    <div class="layui-inline">
                        <label class="layui-form-label">医院名称</label>
                        <div class="layui-input-inline">
                            <div id="classifyParentSels" class="mx-xmselect-tree"></div>
                        </div>
                    </div>
                    <div class="layui-inline">
                        <label class="layui-form-label">姓名</label>
                        <div class="layui-input-inline">
                            <input name="nickname" class="layui-input" autocomplete="off" placeholder="输入标题关键词"/>
                        </div>
                    </div>
                    <!--<div class="layui-inline">
                        <label class="layui-form-label">签到时间</label>
                        <div class="layui-input-inline">
                            <input name="createDateSel" class="layui-input icon-date" placeholder="选择日期范围" autocomplete="off"/>
                        </div>
                    </div>-->
                    <!--<div class="layui-inline">
                        <label class="layui-form-label">签到类型</label>
                        <div class="layui-input-inline">
                            <select name="signtype">
                                <option value="">--- 全部 ---</option>
                                <option value="1">本地签到</option>
                                <option value="2">远程签到</option>
                            </select>
                        </div>
                    </div>-->
                    <div class="layui-inline">&emsp;
                        <button class="layui-btn icon-btn" lay-filter="mxTbSearch" lay-submit>
                            <i class="layui-icon">&#xe615;</i>搜索
                        </button>
<!--                        <button class="layui-btn" lay-filter="signinfo" type="button" id="signinfo">签到记录</button>-->
<!--                        <a class="layui-btn layui-btn-xs" lay-event="signinfo">签到记录</a>-->
<!--                        <button class="layui-btn" lay-filter="printer" type="button" id="printer">打印全部</button>-->
                    </div>
                </div>
            </form>
            <!-- 数据表格 -->
            <table id="mxTable" lay-filter="mxTable"></table>
        </div>
    </div>
</div>
<!--图片模板-->
<script type="text/html" id="imgTpl">
    <ul class="layui-cricle">
        <li><img src="{{d.selfie}}" class="layui-table-img layui-circle" width="100px" height="100px" /></li>
    </ul>
</script>
<!-- 表格操作列 -->
<script type="text/html" id="mxTbBar">
    <a class="layui-btn layui-btn-xs" lay-event="edit">编辑</a>
    <a class="layui-btn layui-btn-danger layui-btn-xs" lay-event="del">删除</a>
    <a class="layui-btn layui-btn-normal layui-btn-xs" lay-event="send">推送</a>
</script>
<!-- 表格状态列 -->
<script type="text/html" id="mxTbState">
    <input type="checkbox" lay-filter="mxTbStateCk" value="{{d.id}}" lay-skin="switch" lay-text="启用|禁用" {{d.status==1?'checked':''}} style="display: none;"/>
    <p style="display: none;">{{d.status==1?'启用':'禁用'}}</p>
</script>
<!-- 表格状态列 -->
<script type="text/html" id="checkStatus">
    {{# if(d.is_check === 1){ }}
    <span class="text-success">已签到</span>
    {{# } else { }}
    <span class="text-danger">未签到</span>
    {{# } }}
</script>
<!-- 表格状态列 -->
<script type="text/html" id="studyStatus">
    {{# if(d.is_study === 1){ }}
    <span class="text-success">已学习</span>
    {{# } else { }}
    <span class="text-danger">未学习</span>
    {{# } }}
</script>
<!-- 表单弹窗 -->
<script type="text/html" id="mxEditDialog">
    <form id="mxEditForm" lay-filter="mxEditForm" class="layui-form model-form">
        <input name="id" type="hidden"/>
        <div class="layui-form-item" id="SmallBanzhu">
            <label class="layui-form-label layui-form-required">学习人员</label>
            <div class="layui-input-block">
                <div id="cateEditSmallBanzhu"></div>
            </div>
        </div>
        <div class="layui-form-item">
            <label class="layui-form-label layui-form-required">学习时间</label>
            <div class="layui-input-inline">
                <input name="study_time" class="layui-input icon-date" placeholder="选择学习时间"  lay-verType="tips" lay-verify="required" required/>
            </div>
        </div>
        <div class="layui-form-item text-right">
            <button class="layui-btn" lay-filter="mxEditSubmit" lay-submit>保存</button>
            <button class="layui-btn layui-btn-primary" type="button" mx-event="closeDialog">取消</button>
        </div>
    </form>
</script>
<button style="display: none;" type="button" id="daoru"></button>
<button style="display: none;" type="button" id="export_study"></button>
<!-- 表格打印 -->
<script type="text/html" id="divTablePrint">


</script>
{/block}

{block name="script"}
<script>
    layui.use(['layer', 'form', 'table', 'admin' , 'printer', 'xmSelect', 'laydate','upload'], function () {
        var $ = layui.jquery;
        var layer = layui.layer;
        var form = layui.form;
        var table = layui.table;
        var admin = layui.admin;
        var xmSelect = layui.xmSelect;
        var laydate = layui.laydate;
        var printer = layui.printer;

        var upload = layui.upload;

        /*var pWindow = printer.printHtml({
            html: '<span>xxxx</span>',  // 要打印的内容
            horizontal: true,         // 是否横向打印
            blank: true,              // 是否打开新页面打印
            close: true,              // 如果是打开新页面，打印完是否关闭
            iePreview: true,          // 是否兼容ie打印预览
            print: true              // 如果是打开新窗口是否自动打印
        });*/

        // 渲染下拉树
        var insXmSels = xmSelect.render({
            el: '#classifyParentSels',
            layVerType: 'tips',
            height: '400px',
            name: 'd_id',
            model: { label: { type: 'text' } },
            prop: {
                name: 'name',
                value: 'id'
            },
            clickClose: false,
            filterable: true,
            filterMethod: function(val, item, index, prop) {
                if (item.name.toLowerCase().indexOf(val.toLowerCase()) != -1) {
                    // 仅允许选择子集数据
                    if (item.parent_id) {
                        return true;
                    }
                }
                return false;
            },
            searchTips: '请输入关键词进行搜索',
            tree: {
                show: true,
                indent: 15,
                strict: false,
                expandedKeys: true
            },
            data: formatData({:json_encode($category)}),
        });

        // 格式化数据函数
        function formatData(data) {
            return data.map(item => {
                if (!item.pid && item.children) {
                    // 禁用一级数据
                    item.disabled = true;
                }
                if (item.children) {
                    item.children = formatData(item.children);
                }
                return item;
            });
        }

        // 自定义打印
        $('#printer').on('click', function (e) {
            printer.printHtml({
                //html: '<div style="color: red;text-align: center;">Hello Word !</div>',
                html: $('#divTablePrint').html(),
                blank: true,              // 是否打开新页面打印
                close: true,              // 如果是打开新页面，打印完是否关闭
                iePreview: false,          // 是否兼容ie打印预览
            });
        })
        var training_id = admin.getLayerData().training_id;  // 获取列表页面传递的数据
        /* 渲染表格 */
        var insTb = table.render({
            elem: '#mxTable',
            url: "{:url('cms/training/datalist_same_study')}?id="+training_id,
            page: {limit: 15},
            limits: [15, 30, 45, 60, 75, 90, 100, 200, 500],
            toolbar: ['<p>',
                //'<button lay-event="signinfo"  class="layui-btn layui-btn-sm layui-btn-danger icon-btn" id="no" style="display: none"><i class="layui-icon">&#xe655;</i>部分打印</button>',
                //'<button lay-event="add" class="layui-btn layui-btn-sm icon-btn"><i class="layui-icon">&#xe654;</i>新增</button>&nbsp;',
                '<button lay-event="Padd" class="layui-btn layui-btn-sm icon-btn"><i class="layui-icon">&#xe654;</i>导入签到</button>&nbsp;',
                '<a href="/storage/template/签到导入模板.xlsx" class="layui-btn layui-btn-sm layui-btn-radius layui-btn-primary"><i class="layui-icon">&#xe601;</i>签到模板</a>',
                '<button lay-event="Export" class="layui-btn layui-btn-sm icon-btn"><i class="layui-icon">&#xe654;</i>导入学习</button>&nbsp;',
                '<a href="/storage/template/学习导入模板.xlsx" class="layui-btn layui-btn-sm layui-btn-radius layui-btn-primary"><i class="layui-icon">&#xe601;</i>学习模板</a>',


                '</p>'].join(''),
                //defaultToolbar: ['filter'],
            cellMinWidth: 100,
            cols: [[
                //{type: 'checkbox'},
                {field: 'id', title: '序号', align: 'center'},
                {field: 'training_title', title: '学习班名称', align: 'center'},
                //{field: 'study_time', title: '学习时间', align: 'center'},
                {field: 'departmentname', title: '医院名称', align: 'center'},
                {field: 'nickname', title: '报名人姓名', align: 'center'},
                {field: 'phone', title: '手机号码', align: 'center', sort: true},
                {field: 'sign_time', title: '报名时间', align: 'center', sort: true},
                {field: 'check_time', title: '签到时间', align: 'center', sort: true},
                {field: 'is_check', title: '签到状态', align: 'center',templet: '#checkStatus'},
                {field: 'study_time', title: '学习时间', align: 'center'},
                {field: 'is_study', title: '学习状态', align: 'center',templet: '#studyStatus'},
                {field: 'total_score', title: '分数', align: 'center'},
                {field: 'outcome', title: '考核结果', align: 'center'},
                //{field: 'status', title: '状态', templet: '#mxTbState', align: 'center', sort: true, width: 80},
                //{title: '操作', toolbar: '#mxTbBar', align: 'center', minWidth: 80}
            ]],
            parseData: function(res){ //res 即为原始返回的数据
                return {
                    "code": res.code, //解析接口状态
                    "msg": res.msg, //解析提示文本
                    "count": res.data.total, //解析数据长度
                    "data": res.data.data //解析数据列表
                };
            },
        });

        /* 渲染时间选择 */
        laydate.render({
            elem: 'input[name="createDateSel"]',
            type: 'date',
            range: true,
            trigger: 'click'
        });
        /* 表格搜索 */
        form.on('submit(mxTbSearch)', function (data) {
            if (data.field.createDateSel) {
                var searchDate = data.field.createDateSel.split(' - ');
                data.field.startDate = searchDate[0];
                data.field.endDate = searchDate[1];
            } else {
                data.field.startDate = null;
                data.field.endDate = null;
            }
            data.field.createDateSel = undefined;
            data.field.training_id = training_id;
            insTb.reload({where: data.field, page: {curr: 1}, url:"{:url('cms/training/datalist_same_study_search')}?id="+training_id});

            // 显示按钮
            var button = document.getElementById('no');
            if (button) {
                button.style.display = 'block'; // 或者使用 'inline', 'inline-block' 根据需要
            }

            return false;
        });


        /* 表格操作列点击事件 */
        table.on('tool(mxTable)', function (obj) {
            if (obj.event === 'edit') { // 编辑
                showEditModel(obj.data);
            } else if (obj.event === 'del') { // 删除
                doDel(obj);
            }else if (obj.event === 'send') { // 推送
                doSend(obj);
            }
        });

        /* 监听单元格编辑 */
        table.on('edit(mxTable)', function(obj){
            if(isNaN(obj.value)){
                layer.msg('只能输入数字！', {icon: 5, anim: 6});
                return false;
            }
            var loadIndex = layer.load(2);
            $.post("{:url('cms/training/edit_weight_same')}", {
                id: obj.data.id,
                weight: obj.value
            }, function (res) {
                layer.close(loadIndex);
                if (res.code === 1) {
                    layer.msg(res.msg);
                    insTb.reload();
                } else {
                    layer.msg(res.msg, {icon: 5, anim: 6});
                }
            }, 'json');
        });

        /* 表格头工具栏点击事件 */
        table.on('toolbar(mxTable)', function (obj) {
            if (obj.event === 'add') { // 添加
                showEditModel();
            } else if (obj.event === 'del') { // 删除
                var checkRows = table.checkStatus('mxTable');
                if (checkRows.data.length === 0) {
                    layer.msg('请选择要删除的数据', {icon: 5, anim: 6});
                    return;
                }
                var ids = checkRows.data.map(function (d) {
                    return d.id;
                });
                doDel({ids: ids});
            }else if (obj.event === 'Padd'){
                $("#daoru").click();
            }else if (obj.event === 'Export'){
                $("#export_study").click();
            }else{
                showSignModel(obj);
            }
        });

        //导入签到
        upload.render({
            elem: '#daoru',
            url: "{:url('cms/training/check')}", //改成您自己的上传接口
            accept: 'file', //文件
            acceptMime: 'application/vnd.ms-excel, application/vnd.openxmlformats-officedocument.spreadsheetml.sheet',
            exts: 'xlsx|xls', //只允许上传excel文件
            size: 8048, //限制文件大小，单位 KB
            done: function(res){
                if (res.code === 1) {
                    layer.msg(res.msg, {icon: 1});
                    insTb.reload();  // 成功刷新表格
                } else {
                    layer.msg(res.msg, {icon: 5, anim: 10});
                }
            }
        });

        //导入学习
        upload.render({
            elem: '#export_study',
            url: "{:url('cms/training/export_study')}", //改成您自己的上传接口
            accept: 'file', //文件
            acceptMime: 'application/vnd.ms-excel, application/vnd.openxmlformats-officedocument.spreadsheetml.sheet',
            exts: 'xlsx|xls', //只允许上传excel文件
            size: 8048, //限制文件大小，单位 KB
            done: function(res){
                if (res.code === 1) {
                    layer.msg(res.msg, {icon: 1});
                    insTb.reload();  // 成功刷新表格
                } else {
                    layer.msg(res.msg, {icon: 5, anim: 10});
                }
            }
        });

        /* 显示表单弹窗 */
        function showSignModel(obj) {

            //console.log(m_id);
            admin.open({
                type: 2,
                area: ['1620px', '1080px'],
                title: '签到记录',
                shade: 0.5,
                //shadeClose: true,
                //content: '<table id="mxSigninfo" lay-filter="mxSigninfo"></table>',
                content: "{:url('cms/training/printer')}?id="+87,
                success: function (layero, dIndex) {


                }
            });

        }

        /* 显示表单弹窗 */
        function showEditModel(mData) {
            admin.open({
                type: 1,
                area: '650px',
                title: (mData ? '编辑' : '新增') + '学习记录',
                shade: 0.5,
                //shadeClose: true,
                content: $('#mxEditDialog').html(),
                success: function (layero, dIndex) {
                    /* 渲染时间选择 */
                    laydate.render({
                        elem: 'input[name="study_time"]',
                        //type: 'datetime',
                        range: false,
                        trigger: 'click'
                    });
                    // 渲染多选下拉框
                    var insRoleSelSmall = xmSelect.render({
                        el: '#cateEditSmallBanzhu',
                        name: 'cateEditSmallBanzhu',
                        layVerify: 'required',
                        searchTips: '点击搜索',
                        toolbar: {
                            show: true,
                            list: ['ALL', 'CLEAR', 'REVERSE' ]
                        },
                        paging: true,
                        radio: true,
                        pageSize: 10,
                        filterable: true,
                        layVerType: 'tips',
                        initValue: mData ? mData.assistant_uid:[],
                        prop: {
                            name: 'nickname',
                            value: 'id',
                        },
                        data: {:json_encode($userlist)}
                });
                    // 回显表单数据
                    form.val('mxEditForm', mData);
                    // 表单提交事件
                    form.on('submit(mxEditSubmit)', function (data) {
                        var loadIndex = layer.load(2);
                        $.post(mData ? "{:url('cms/ad/edit')}" : "{:url('cms/ad/add')}", data.field, function (res) {
                            layer.close(loadIndex);
                            if (res.code === 1) {
                                layer.close(dIndex);
                                layer.msg(res.msg, {icon: 1});
                                insTb.reload();  // 保存成功刷新表格
                            } else {
                                layer.msg(res.msg, {icon: 5, anim: 6});
                            }
                        }, 'json');
                        return false;
                    });

                }
            });
        }

        /* 删除 */
        function doDel(obj) {
            layer.confirm('确定要删除选中的数据吗？', {
                title: '删除数据',
                skin: 'layui-layer-admin',
                shade: 0.5,
                shadeClose: true,
            }, function (i) {
                layer.close(i);
                var loadIndex = layer.load(2);
                $.post("{:url('cms/training/del')}", {
                    id: obj.data ? obj.data.id : '',
                    ids: obj.ids ? obj.ids.join(',') : ''
                }, function (res) {
                    layer.close(loadIndex);
                    if (res.code === 1) {
                        layer.msg(res.msg, {icon: 1});
                        insTb.reload();
                    } else {
                        layer.msg(res.msg, {icon: 5, anim: 6});
                    }
                }, 'json');
            });
        }
        /* 推送 */
        function doSend(obj) {
            layer.confirm('确定要推送选中的数据吗？', {
                title: '推送数据',
                skin: 'layui-layer-admin',
                shade: 0.5,
                shadeClose: true,
            }, function (i) {
                layer.close(i);
                var loadIndex = layer.load(2);
                $.post("{:url('cms/training/send')}", {
                    id: obj.data ? obj.data.id : '',
                    ids: obj.ids ? obj.ids.join(',') : ''
                }, function (res) {
                    layer.close(loadIndex);
                    if (res.code === 1) {
                        layer.msg(res.msg, {icon: 1});
                        insTb.reload();
                    } else {
                        layer.msg(res.msg, {icon: 5, anim: 6});
                    }
                }, 'json');
            });
        }

        /* 编辑状态 */
        form.on('switch(mxTbStateCk)', function (obj) {
            var loadIndex = layer.load(2);
            $.post("{:url('cms/training/edit_state_same')}", {
                id: obj.elem.value,
                status: obj.elem.checked ? 1 : 0
            }, function (res) {
                layer.close(loadIndex);
                if (res.code === 1) {
                    layer.msg(res.msg);
                    insTb.reload();
                } else {
                    layer.msg(res.msg, {icon: 5, anim: 6});
                    $(obj.elem).prop('checked', !obj.elem.checked);
                    form.render('checkbox');
                }
            }, 'json');
        });
    });
</script>
{/block}
