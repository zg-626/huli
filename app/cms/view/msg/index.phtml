{extend name="../../mxadmin/view/base" /}

{block name="title"}通知管理{/block}

{block name="body"}
<div class="layui-fluid">
    <div class="layui-card">
        <div class="layui-card-body">
            <!-- 表格工具栏 -->
            <form class="layui-form toolbar">
                <div class="layui-form-item">
                    <div class="layui-inline">
                        <label class="layui-form-label">通知分类</label>
                        <div class="layui-input-inline">
                            <div id="msgParentSels" class="mx-xmselect-tree"></div>
                        </div>
                        <!--<div class="layui-input-inline">
                            <select name="type">
                                <option value="">--- 全部 ---</option>
                                {volist name="msgtype" id="vo"}
                                <option value="{$vo.id}">{$vo.name}</option>
                                {/volist}
                            </select>
                        </div>-->
                    </div>
                    <div class="layui-inline">
                        <label class="layui-form-label">通知标题</label>
                        <div class="layui-input-inline">
                            <input name="title" class="layui-input" autocomplete="off" placeholder="输入标题关键词"/>
                        </div>
                    </div>
                    <!-- <div class="layui-inline">
                        <label class="layui-form-label">状&emsp;态</label>
                        <div class="layui-input-inline">
                            <select name="status">
                                <option value="">--- 全部 ---</option>
                                <option value="1">启用</option>
                                <option value="0">禁用</option>
                            </select>
                        </div>
                    </div> -->
                    <div class="layui-inline">&emsp;
                        <button class="layui-btn icon-btn" lay-filter="mxTbSearch" lay-submit>
                            <i class="layui-icon">&#xe615;</i>搜索
                        </button>
                    </div>
                </div>
            </form>
            <!-- 数据表格 -->
            <table id="mxTable" lay-filter="mxTable"></table>
        </div>
    </div>
</div>

<!-- 表格操作列 -->
<script type="text/html" id="mxTbBar">
    <a class="layui-btn layui-btn-xs" lay-event="read">阅读列表</a>
    <a class="layui-btn layui-btn-xs" lay-event="edit">编辑</a>
    <!--{{#  if(d.status == 0){ }}
    <a class="layui-btn layui-btn-xs layui-bg-green" lay-event="tui">推送</a>
    
    {{#  } else{ }}
    <a class="layui-btn layui-btn-xs layui-bg-black">已推送</a>
    {{#  } }} -->
    <a class="layui-btn layui-btn-danger layui-btn-xs" lay-event="del">删除</a>
</script>
<!-- 表格状态列 -->
<script type="text/html" id="mxTbState">
    <input type="checkbox" lay-filter="mxTbStateCk" value="{{d.id}}" lay-skin="switch" lay-text="启用|禁用" {{d.status==1?'checked':''}} style="display: none;"/>
    <p style="display: none;">{{d.status==1?'启用':'禁用'}}</p>
</script>
{/block}

{block name="script"}
<script>
    layui.use(['layer', 'form', 'table', 'admin', 'xmSelect'], function () {
        var $ = layui.jquery;
        var layer = layui.layer;
        var form = layui.form;
        var table = layui.table;
        var admin = layui.admin;
        var xmSelect = layui.xmSelect;

        /* 渲染表格 */
        var insTb = table.render({
            elem: '#mxTable',
            url: "{:url('cms/msg/datalist')}",
            page: {limit: 15},
            limits: [15, 30, 45, 60, 75, 90, 100, 200, 500],
            toolbar: ['<p>',
                //'<button lay-event="del" class="layui-btn layui-btn-sm layui-btn-danger icon-btn"><i class="layui-icon">&#xe640;</i>批量删除</button>',
                '<button lay-event="add" class="layui-btn layui-btn-sm icon-btn"><i class="layui-icon">&#xe654;</i>添加通知</button>&nbsp;',
                '</p>'].join(''),
            defaultToolbar: ['filter'],
            cellMinWidth: 100,
            cols: [[
                {type: 'checkbox'},
                {field: 'id', title: '序号', align: 'center'},
                {field: 'type_name', title: '分类', align: 'center'},
                {field: 'title', title: '通知标题'},
                {field: 'read_count', title: '阅读人数'},
                //{field: 'weight', title: '排序权重', align: 'center', sort: true, width: 110, edit: 'text'},
                //{field: 'username', title: '发布人', align: 'center'},
                {field: 'create_time', title: '发布时间', align: 'center', sort: true,templet:"<div>{{layui.util.toDateString(d.create_time*1000,'yyyy-MM-dd HH:mm:ss')}}</div>"},
                {field: 'update_time', title: '更新时间', align: 'center', sort: true,templet:"<div>{{layui.util.toDateString(d.update_time*1000,'yyyy-MM-dd HH:mm:ss')}}</div>"},
                //{field: 'status', title: '状态', templet: '#mxTbState', align: 'center', sort: true, width: 100},
                {title: '操作', toolbar: '#mxTbBar', align: 'center', minWidth: 180}
            ]],
            parseData: function(res){ //res 即为原始返回的数据
                return {
                    "code": res.code, //解析接口状态
                    "msg": res.msg, //解析提示文本
                    "count": res.data.total, //解析数据长度
                    "data": res.data.data //解析数据列表
                };
            },
        });

        /* 表格搜索 */
        form.on('submit(mxTbSearch)', function (data) {
            insTb.reload({where: data.field, page: {curr: 1}, url:"{:url('cms/msg/serach')}"});
            return false;
        });

        /* 表格操作列点击事件 */
        table.on('tool(mxTable)', function (obj) {
            if (obj.event === 'edit') { // 编辑
                showModels(obj.data);
            } else if (obj.event === 'del') { // 删除
                doDel(obj);
            }else if (obj.event === 'che') { // 删除
                doChe(obj);
            }else if (obj.event === 'read') { // 阅读列表
                showReadModel(obj);
            }else{
                doTui(obj);
            }
        });

        /* 监听单元格编辑 */
        table.on('edit(mxTable)', function(obj){
            if(isNaN(obj.value)){
                layer.msg('只能输入数字！', {icon: 5, anim: 6});
                return false;
            }
            var loadIndex = layer.load(2);
            $.post("{:url('cms/msg/edit_weight_same')}", {
                id: obj.data.id,
                weight: obj.value
            }, function (res) {
                layer.close(loadIndex);
                if (res.code === 1) {
                    layer.msg(res.msg);
                    insTb.reload();
                } else {
                    layer.msg(res.msg, {icon: 5, anim: 6});
                }
            }, 'json');
        });

        /* 表格头工具栏点击事件 */
        table.on('toolbar(mxTable)', function (obj) {
            if (obj.event === 'add') { // 添加
                showModel();
            } else if (obj.event === 'del') { // 删除
                var checkRows = table.checkStatus('mxTable');
                if (checkRows.data.length === 0) {
                    layer.msg('请选择要删除的数据', {icon: 5, anim: 6});
                    return;
                }
                var ids = checkRows.data.map(function (d) {
                    return d.id;
                });
                doDel({ids: ids});
            }
        });

        /* 显示表单弹窗 */
        function showModel(mData) {
            var layIndex = admin.open({
                title: (mData ? '编辑' : '添加') + '通知',
                shade: 0.5,
                //shadeClose: true,
                url: "{:url('cms/msg/form')}",
                data: {formdata: mData},     // 传递数据到表单页面
                end: function () {
                    if (admin.getLayerData(layIndex, 'formOk')) {  // 判断表单操作成功标识
                        insTb.reload();  // 成功刷新表格
                    }
                },
                success: function (layero, dIndex) {
                    // 弹窗超出范围不出现滚动条
                    //$(layero).children('.layui-layer-content').css('overflow', 'visible');
                }
            });
            // 窗口打开即全屏
            layer.full(layIndex);
        }

        // 渲染职称下拉树
        var msgParentSel = xmSelect.render({
            el: '#msgParentSels',
            layVerType: 'tips',
            height: '400px',
            name: 'type',
            model: { label: { type: 'text' } },
            prop: {
                name: 'name',
                value: 'id'
            },
            clickClose: false,
            filterable: true,
            filterMethod: function(val, item, index, prop) {
                if (item.name.toLowerCase().indexOf(val.toLowerCase()) != -1) {
                    // 仅允许选择子集数据
                    if (item.parent_id) {
                        return true;
                    }
                }
                return false;
            },
            searchTips: '请输入关键词进行搜索',
            tree: {
                show: true,
                indent: 15,
                strict: false,
                expandedKeys: true
            },
            data: {:json_encode($msgtype)},
        });

        /* 显示表单弹窗 */
        function showModels(mData) {
            var layIndex = admin.open({
                title: (mData ? '查看' : '添加') + '通知',
                shade: 0.5,
                //shadeClose: true,
                url: "{:url('cms/msg/form')}",
                data: {formdata: mData},     // 传递数据到表单页面
                end: function () {
                    if (admin.getLayerData(layIndex, 'formOk')) {  // 判断表单操作成功标识
                        insTb.reload();  // 成功刷新表格
                    }
                },
                success: function (layero, dIndex) {
                    // 弹窗超出范围不出现滚动条
                    //$(layero).children('.layui-layer-content').css('overflow', 'visible');
                }
            });
            // 窗口打开即全屏
            layer.full(layIndex);
        }

        /* 删除 */
        function doDel(obj) {
            layer.confirm('确定要删除选中的数据吗？', {
                title: '删除数据',
                skin: 'layui-layer-admin',
                shade: 0.5,
                shadeClose: true,
            }, function (i) {
                layer.close(i);
                var loadIndex = layer.load(2);
                $.post("{:url('cms/msg/del')}", {
                    id: obj.data ? obj.data.id : '',
                    ids: obj.ids ? obj.ids.join(',') : ''
                }, function (res) {
                    layer.close(loadIndex);
                    if (res.code === 1) {
                        layer.msg(res.msg, {icon: 1});
                        insTb.reload();
                    } else {
                        layer.msg(res.msg, {icon: 5, anim: 6});
                    }
                }, 'json');
            });
        }

        /* 显示表单弹窗 */
        function showReadModel(obj) {

            //var m_id=obj.data.id;
            //console.log(m_id);
            admin.open({
                type: 2,
                area: ['1620px', '630px'],
                title: '阅读列表',
                shade: 0.5,
                //shadeClose: true,
                //content: '<table id="mxSigninfo" lay-filter="mxSigninfo"></table>',
                content: "{:url('cms/msg_read/index')}?id="+obj.data.id,
                success: function (layero, dIndex) {


                }
            });

        }

        /* 推送 */
        function doTui(obj) {
            layer.confirm('确定要推送选中的数据吗？', {
                title: '推送数据',
                skin: 'layui-layer-admin',
                shade: 0.5,
                shadeClose: true,
            }, function (i) {
                layer.close(i);
                var loadIndex = layer.load(2);
                $.post("{:url('cms/msg/tui')}", {
                    id: obj.data ? obj.data.id : '',
                    ids: obj.ids ? obj.ids.join(',') : ''
                }, function (res) {
                    layer.close(loadIndex);
                    if (res.code === 1) {
                        layer.msg(res.msg, {icon: 1});
                        insTb.reload();
                    } else {
                        layer.msg(res.msg, {icon: 5, anim: 6});
                    }
                }, 'json');
            });
        }

        /* 推送 */
        function doChe(obj) {
            layer.confirm('确定要撤回选中的数据吗？', {
                title: '撤回数据',
                skin: 'layui-layer-admin',
                shade: 0.5,
                shadeClose: true,
            }, function (i) {
                layer.close(i);
                var loadIndex = layer.load(2);
                $.post("{:url('cms/msg/che')}", {
                    id: obj.data ? obj.data.id : '',
                    ids: obj.ids ? obj.ids.join(',') : ''
                }, function (res) {
                    layer.close(loadIndex);
                    if (res.code === 1) {
                        layer.msg(res.msg, {icon: 1});
                        insTb.reload();
                    } else {
                        layer.msg(res.msg, {icon: 5, anim: 6});
                    }
                }, 'json');
            });
        }

        /* 编辑状态 */
        form.on('switch(mxTbStateCk)', function (obj) {
            var loadIndex = layer.load(2);
            $.post("{:url('cms/msg/edit_state_same')}", {
                id: obj.elem.value,
                status: obj.elem.checked ? 1 : 0
            }, function (res) {
                layer.close(loadIndex);
                if (res.code === 1) {
                    layer.msg(res.msg);
                    insTb.reload();
                } else {
                    layer.msg(res.msg, {icon: 5, anim: 6});
                    $(obj.elem).prop('checked', !obj.elem.checked);
                    form.render('checkbox');
                }
            }, 'json');
        });
    });
</script>
{/block}
